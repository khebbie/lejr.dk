// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace lejr_dk.specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ActiveCamps")]
    [NUnit.Framework.CategoryAttribute("Specs")]
    public partial class ActiveCampsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ActiveCamps.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ActiveCamps", "In order to find camps that I am interested in\r\nAs a user\r\nI want to see the upco" +
                    "mming camps", new string[] {
                        "Specs"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No upcomming camps exists")]
        [NUnit.Framework.CategoryAttribute("Specs")]
        public virtual void NoUpcommingCampsExists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No upcomming camps exists", new string[] {
                        "Specs"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("No junior camps exists in the db");
#line 10
testRunner.When("I go the junior camp page");
#line 11
testRunner.Then("I get a message saying \"Ingen planlagte lejre\"");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("One upcomming camp")]
        [NUnit.Framework.CategoryAttribute("Specs")]
        public virtual void OneUpcommingCamp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("One upcomming camp", new string[] {
                        "Specs"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
testRunner.Given("1 junior camps exists in the db");
#line 16
testRunner.When("I go the junior camp page");
#line 17
testRunner.Then("I see the camp information");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Three upcomming camps")]
        [NUnit.Framework.CategoryAttribute("Specs")]
        public virtual void ThreeUpcommingCamps()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Three upcomming camps", new string[] {
                        "Specs"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("3 junior camps exists in the db");
#line 22
testRunner.When("I go the junior camp page");
#line 23
testRunner.Then("I see the camp information");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
